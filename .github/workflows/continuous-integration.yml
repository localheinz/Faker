# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  pull_request:
  push:
    branches:
      - "main"
      - "[0-9].*"

name: Continuous Integration

jobs:
  backwards-compatibilty:
    name: Backwards Compatibility
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Roave BC Check
        uses: docker://nyholm/roave-bc-check-ga

  static-analysis-phpstan:
    name: Static Analysis (PHPStan)

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - 7.4

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          extensions: intl
          php-version: ${{ matrix.php-version }}

      - name: Determine composer cache directory
        id: composer-cache
        run: echo "::set-output name=directory::$(composer config cache-dir)"

      - name: Cache dependencies installed with composer
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.directory }}
          key: composer-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('composer.*') }}
          restore-keys: |
            composer-${{ runner.os }}-${{ matrix.php-version }}-
            composer-${{ runner.os }}-
            composer-

      - name: Download dependencies
        run: |
          composer update --no-interaction --no-progress --optimize-autoloader
          composer bin phpstan update --no-interaction --no-progress --optimize-autoloader

      - name: Run PHPStan
        run: |
          vendor/bin/phpstan analyze --no-progress

  static-analysis-psalm:
    name: Static Analysis (Psalm)

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - 7.4

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          extensions: intl
          php-version: ${{ matrix.php-version }}

      - name: Determine composer cache directory
        id: composer-cache
        run: echo "::set-output name=directory::$(composer config cache-dir)"

      - name: Cache dependencies installed with composer
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.directory }}
          key: composer-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('composer.*') }}
          restore-keys: |
            composer-${{ runner.os }}-${{ matrix.php-version }}-
            composer-${{ runner.os }}-
            composer-

      - name: Download dependencies
        run: |
          composer update --no-interaction --no-progress --optimize-autoloader
          composer bin psalm update --no-interaction --no-progress --optimize-autoloader

      - name: Run Psalm
        run: |
          vendor/bin/psalm.phar --no-progress --output-format=github

  tests:
    name: Tests on ${{ matrix.operating-system }} with PHP ${{ matrix.php-version }}

    strategy:
      matrix:
        operating-system:
          - 'ubuntu-latest'
        php-version:
          - '7.1'
          - '7.2'
          - '7.3'
          - '7.4'
          - '8.0'
        include:
          - operating-system: 'windows-latest'
            php-version: '7.1'

    runs-on: ${{ matrix.operating-system }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          extensions: intl
          php-version: ${{ matrix.php-version }}

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('composer.*') }}
          restore-keys: |
            composer-${{ runner.os }}-${{ matrix.php-version }}-
            composer-${{ runner.os }}-
            composer-

      - name: Download dependencies
        run: |
          composer update --no-interaction --no-progress --optimize-autoloader

      - name: Run tests with PHPUnit
        run: |
          vendor/bin/phpunit
